[build-system]
requires = ["setuptools>=42.0"]
build-backend = "setuptools.build_meta"

[project]
name = "decommission-tool"
version = "0.1.0"
description = "Tool to decommission PostgreSQL databases from a Helm-based infrastructure"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pyyaml>=6.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.1",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "black>=23.7.0",
    "ruff>=0.0.284",
    "pip-tools>=7.0.0",

]

[project.scripts]
decommission-tool = "decommission_tool:main"

[tool.setuptools]
py-modules = ["decommission_tool", "git_utils"]

[project.urls]
"Homepage" = "https://github.com/yourusername/decommission-tool"
"Bug Tracker" = "https://github.com/yourusername/decommission-tool/issues"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "PL", # pylint
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long - handled by black
    "PLR2004",  # Magic value used in comparison
]

[tool.ruff.isort]
known-first-party = ["decommission_tool"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
